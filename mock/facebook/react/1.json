[
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12421",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12421/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12421/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12421/events",
    "html_url": "https://github.com/facebook/react/pull/12421",
    "id": 307430122,
    "number": 12421,
    "title": "Improve cryptic error message when creating a component starting with a lowercase letter",
    "user": {
      "login": "getaaron",
      "id": 789577,
      "avatar_url": "https://avatars2.githubusercontent.com/u/789577?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/getaaron",
      "html_url": "https://github.com/getaaron",
      "followers_url": "https://api.github.com/users/getaaron/followers",
      "following_url": "https://api.github.com/users/getaaron/following{/other_user}",
      "gists_url": "https://api.github.com/users/getaaron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/getaaron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/getaaron/subscriptions",
      "organizations_url": "https://api.github.com/users/getaaron/orgs",
      "repos_url": "https://api.github.com/users/getaaron/repos",
      "events_url": "https://api.github.com/users/getaaron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/getaaron/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-21T21:47:46Z",
    "updated_at": "2018-03-21T23:14:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12421",
      "html_url": "https://github.com/facebook/react/pull/12421",
      "diff_url": "https://github.com/facebook/react/pull/12421.diff",
      "patch_url": "https://github.com/facebook/react/pull/12421.patch"
    },
    "body": "This PR fixes https://github.com/facebook/react-native/issues/18473 by adding a recovery suggestion to the error that appears when creating a component starting with a lowercase letter. (e.g. if you try to render `<myComponent/>` instead of `<MyComponent/>`)\r\n\r\nThe change was initially approved and landed in PR https://github.com/facebook/react-native/pull/18488 but it was suggested to open the PR here instead so that (1) the core react project could benefit from the change, and (2) so it wouldn't get overwritten later when react-native updated from react.\r\n\r\nThe change passes both react and react-native test suites locally."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12420",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12420/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12420/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12420/events",
    "html_url": "https://github.com/facebook/react/issues/12420",
    "id": 307420197,
    "number": 12420,
    "title": "Password field causes memory leak in production builds",
    "user": {
      "login": "dcodus",
      "id": 12925816,
      "avatar_url": "https://avatars0.githubusercontent.com/u/12925816?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcodus",
      "html_url": "https://github.com/dcodus",
      "followers_url": "https://api.github.com/users/dcodus/followers",
      "following_url": "https://api.github.com/users/dcodus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcodus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcodus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcodus/subscriptions",
      "organizations_url": "https://api.github.com/users/dcodus/orgs",
      "repos_url": "https://api.github.com/users/dcodus/repos",
      "events_url": "https://api.github.com/users/dcodus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcodus/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-21T21:13:31Z",
    "updated_at": "2018-03-21T21:13:31Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\n*Bug*\r\n\r\n**What is the current behavior?**\r\nWe're noticing that password-type input fields  (as well as their wrapping parents) remain as detached DOM elements when conditionally being rendered and removed from the DOM.\r\n\r\nThis issue seems to be occurring across several applications using React 16, include a newly created app from `Create React App`, and we're able to produce Chrome memory heap snapshots in all of these environments to demonstrate this issue.\r\n\r\nObserve in the following example, the button adds/removes the input field to the DOM. To reproduce the problem stated in this issue, repeatedly click this button (say 20-30 times), then take a memory heap snapshot. You will *see multiple detached DOM elements, the password `input` field and its wrapping div.* Note that this issue does not happen for other types of input fields.\r\n\r\n```\r\nclass App extends Component {\r\n  state = { show: false };\r\n\r\n  toggle = () => this.setState({show: !this.state.show})\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggle}>Toggle password field</button>\r\n        {this.state.show && (\r\n          <div>\r\n            <input type=\"password\"/>\r\n          </div>\r\n       )}\r\n       </div>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/12925816/37737606-989d51be-2d2a-11e8-8650-ac4237c1ab7f.png)\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nWe have tried this issue in React 16.2, 16.1 and React 15.6. Chrome and Canary were the browsers tested in particular."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12419",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12419/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12419/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12419/events",
    "html_url": "https://github.com/facebook/react/pull/12419",
    "id": 307374809,
    "number": 12419,
    "title": "Expanded DEV-only warnings for gDSFP and legacy lifecycles",
    "user": {
      "login": "bvaughn",
      "id": 29597,
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "gaearon",
      "id": 810438,
      "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gaearon",
      "html_url": "https://github.com/gaearon",
      "followers_url": "https://api.github.com/users/gaearon/followers",
      "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
      "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
      "organizations_url": "https://api.github.com/users/gaearon/orgs",
      "repos_url": "https://api.github.com/users/gaearon/repos",
      "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gaearon/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "gaearon",
        "id": 810438,
        "avatar_url": "https://avatars0.githubusercontent.com/u/810438?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/gaearon",
        "html_url": "https://github.com/gaearon",
        "followers_url": "https://api.github.com/users/gaearon/followers",
        "following_url": "https://api.github.com/users/gaearon/following{/other_user}",
        "gists_url": "https://api.github.com/users/gaearon/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/gaearon/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/gaearon/subscriptions",
        "organizations_url": "https://api.github.com/users/gaearon/orgs",
        "repos_url": "https://api.github.com/users/gaearon/repos",
        "events_url": "https://api.github.com/users/gaearon/events{/privacy}",
        "received_events_url": "https://api.github.com/users/gaearon/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-21T18:50:38Z",
    "updated_at": "2018-03-21T22:47:11Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12419",
      "html_url": "https://github.com/facebook/react/pull/12419",
      "diff_url": "https://github.com/facebook/react/pull/12419.diff",
      "patch_url": "https://github.com/facebook/react/pull/12419.patch"
    },
    "body": "Warn about any component that contains the new `getDerivedStateFromProps` lifecycle that also has any of the legacy/unsafe lifecycles `componentWillMount`, `componentWillReceiveProps`, or `componentWillUpdate` (regardless of the \"UNSAFE_\" prefix).\r\n\r\nExplicitly warn that the legacy/unsafe lifecycles will _not be run_ for this component.\r\n\r\nResolves #12411"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12417",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12417/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12417/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12417/events",
    "html_url": "https://github.com/facebook/react/issues/12417",
    "id": 307336026,
    "number": 12417,
    "title": "Change on <i> ag isn't enough to make my component re-render",
    "user": {
      "login": "gfelot",
      "id": 7879555,
      "avatar_url": "https://avatars2.githubusercontent.com/u/7879555?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gfelot",
      "html_url": "https://github.com/gfelot",
      "followers_url": "https://api.github.com/users/gfelot/followers",
      "following_url": "https://api.github.com/users/gfelot/following{/other_user}",
      "gists_url": "https://api.github.com/users/gfelot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gfelot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gfelot/subscriptions",
      "organizations_url": "https://api.github.com/users/gfelot/orgs",
      "repos_url": "https://api.github.com/users/gfelot/repos",
      "events_url": "https://api.github.com/users/gfelot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gfelot/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-21T17:04:37Z",
    "updated_at": "2018-03-21T17:04:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "***Bug* && *Question***\r\n\r\n**What is the current behavior?**\r\n\r\nIt's was a bug on my code and thanks to SO I find a way to fix it. But I would like an explanation why I had this behavior.\r\n\r\nI made a form with redux-form (using Bulma for the CSS).\r\nI wanted to add an icon to the right of the input, in a `<i>` tag  like Bulma's doc show us, after a focus to have a visual validation.\r\n\r\nGreen FontAwesome icon if the input is valid. Another one in red if not.\r\n\r\nThe first re-render with the right icon was OK but if I had an invalid field and then write something in it, the icon doesn't change even if I see the props that should trigger the new icon was changing.\r\n\r\nTrying to debug, I had make it work without changing my logic with just replacing the `<i>` tag to a `span`, or a `h1`... and I had the right behavior.\r\n\r\n(i dunno how to make my example work on fiddle)\r\n\r\nIn this state it doesn't work with `i` but uncomment the `span` and comment the `i` and it's working.\r\n\r\n```javascript\r\nimport React from 'react';\r\n\r\nconst InputItem = ({ spec, input, meta: { touched, error } }) => {\r\n\r\n  const successIconRight = {\r\n    color: '#2ecc71'\r\n  };\r\n\r\n  const errorIconRight = {\r\n    color: '#e74c3c'\r\n  };\r\n\r\n  const { label, type, placeholder, iconLeft, iconRight } = spec;\r\n\r\n  const renderIcon = () => {\r\n\r\n    if (touched && error) {\r\n      return (\r\n        <span className=\"icon is-small is-right\">\r\n          <i className=\"fas fa-ban\" style={errorIconRight}/>\r\n          {/* <span style={errorIconRight}>NON</span> */}\r\n        </span>\r\n      )\r\n    } else if (touched && !error) {\r\n      return (\r\n        <span className=\"icon is-small is-right\">\r\n          <i className={iconRight} style={successIconRight}/>\r\n          {/* <span style={successIconRight}>OUI</span> */}\r\n        </span>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"field\">\r\n      {label && <label className=\"label\">{label}</label>}\r\n      <p className=\"control has-icons-left has-icons-right\">\r\n        <input\r\n          {...input}\r\n          className=\"input\"\r\n          type={type}\r\n          placeholder={placeholder}\r\n        />\r\n        <span className=\"icon is-small is-left\">\r\n          <i className={iconLeft} />\r\n        </span>\r\n        {renderIcon()}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputItem;\r\n```\r\n\r\nPosting on SO someone ring my bell. The two component where two close from each other for react to interpret it as a change with a `<i>` tag. So no re render.  A span was ok.\r\n\r\n\r\nI had to manually add a `key` props on the parent `span` to make it work like so in my `renderIcon` func.\r\n\r\n```javascript\r\nconst renderIcon = () => {\r\n\r\n    if (touched && error) {\r\n      return (\r\n        <span className=\"icon is-small is-right\" key={0}>\r\n          <i className=\"fas fa-ban\" style={errorIconRight}/>\r\n          {/* <span style={errorIconRight}>NON</span> */}\r\n        </span>\r\n      )\r\n    } else if (touched && !error) {\r\n      return (\r\n        <span className=\"icon is-small is-right\" key={1}>\r\n          <i className={iconRight} style={successIconRight}/>\r\n          {/* <span style={successIconRight}>OUI</span> */}\r\n        </span>\r\n      )\r\n    }\r\n  }\r\n```\r\n\r\nSo my question is why it's not enough for react to render when a `<i>`  tag change ?\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12415",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12415/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12415/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12415/events",
    "html_url": "https://github.com/facebook/react/issues/12415",
    "id": 307272934,
    "number": 12415,
    "title": "dangerouslySetInnerHTML will wrap on SSR but not client and both are editing invalid HTML",
    "user": {
      "login": "TimoRuetten",
      "id": 7010059,
      "avatar_url": "https://avatars1.githubusercontent.com/u/7010059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TimoRuetten",
      "html_url": "https://github.com/TimoRuetten",
      "followers_url": "https://api.github.com/users/TimoRuetten/followers",
      "following_url": "https://api.github.com/users/TimoRuetten/following{/other_user}",
      "gists_url": "https://api.github.com/users/TimoRuetten/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TimoRuetten/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TimoRuetten/subscriptions",
      "organizations_url": "https://api.github.com/users/TimoRuetten/orgs",
      "repos_url": "https://api.github.com/users/TimoRuetten/repos",
      "events_url": "https://api.github.com/users/TimoRuetten/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TimoRuetten/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 710332294,
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20Server%20Rendering",
        "name": "Component: Server Rendering",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-21T14:39:36Z",
    "updated_at": "2018-03-21T21:42:40Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Currently we need to use the dangerouslySetInnerHTML tag in a special case. In this case we need to split our string into several and then we need to render them. This could look like this:\r\n\r\n```javascript\r\n[\r\n      <div\r\n        key=\"markup-1\"\r\n        dangerouslySetInnerHTML={{ __html: '<div><h1>InnerHtml Test</h1>' }}\r\n      />,\r\n      <div\r\n        key=\"markup-2\"\r\n        dangerouslySetInnerHTML={{ __html: '</div>' }}\r\n      />\r\n    ]\r\n```\r\n\r\nThis looks dirty - and yes, it is - but in our case we need to do smth like this until we've found a better solution. The Problem is that the SSR does not match with the client. This is the error:\r\n\r\n\r\n```javascript\r\nWarning: Prop `dangerouslySetInnerHTML` did not match. Server: \"<div><h1>InnerHtml Test</h1></div><div></div>\" Client: \"<div><h1>InnerHtml Test</h1></div>\"\r\n```\r\n\r\n**Problem 1**\r\nIt seems that on SSR react is wrapping the dangerouslyInnerHtml - the client does not. In general its a problem that React is wrapping it and we are wondering if we could avoid this somehow. Because our first HTML part is not valid and will just be valid with the second part.\r\n\r\n**Problem 2**\r\nThe second Problem is that it seems that react is making the part valid. On Server and on Client react is closing the first part with the </div>.\r\n\r\n\r\nMaybe you are wondering why we are doing this. The Problem is that we load HTML data from a database and we need to replace some special words with real React Components. So our  plan was something like this:\r\n\r\n```html\r\n<div>\r\n<h1>Markup</h1>\r\n<p>Some text...</p>\r\n<RenderAComponentHere />\r\n<p>More text ..</p>\r\n</div>\r\n```\r\nNow we split the HTML so we will get an Array with 2 Items.\r\n\r\n```javascript\r\n[\r\n'\r\n     <div>\r\n     <h1>Markup</h1>\r\n     <p>Some text...</p>\r\n',\r\n'\r\n     <p>More text ..</p>\r\n    </div>\r\n'\r\n]\r\n```\r\n\r\nNow we want to render the first Part with dangerouslySetInnerHTML, then we will render our real React-Component and then again the last part with dangerouslySetInnerHTML.\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12412",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12412/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12412/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12412/events",
    "html_url": "https://github.com/facebook/react/pull/12412",
    "id": 307201221,
    "number": 12412,
    "title": "tests: add regression test for reading ReactCurrentOwner stateNode",
    "user": {
      "login": "raunofreiberg",
      "id": 23662329,
      "avatar_url": "https://avatars1.githubusercontent.com/u/23662329?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/raunofreiberg",
      "html_url": "https://github.com/raunofreiberg",
      "followers_url": "https://api.github.com/users/raunofreiberg/followers",
      "following_url": "https://api.github.com/users/raunofreiberg/following{/other_user}",
      "gists_url": "https://api.github.com/users/raunofreiberg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/raunofreiberg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/raunofreiberg/subscriptions",
      "organizations_url": "https://api.github.com/users/raunofreiberg/orgs",
      "repos_url": "https://api.github.com/users/raunofreiberg/repos",
      "events_url": "https://api.github.com/users/raunofreiberg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/raunofreiberg/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-21T11:08:04Z",
    "updated_at": "2018-03-21T12:12:00Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12412",
      "html_url": "https://github.com/facebook/react/pull/12412",
      "diff_url": "https://github.com/facebook/react/pull/12412.diff",
      "patch_url": "https://github.com/facebook/react/pull/12412.patch"
    },
    "body": "Follow up PR for #12407. Adds a regression test related to issue #12299.\r\n\r\nBefore the #12407 fix this test case would fail as:\r\n\r\n```\r\nExpected the function not to throw an error matching:\r\n  [TypeError: Cannot read property '_warnedAboutRefsInRender' of null]\r\nInstead, it threw:\r\n  TypeError: Cannot read property '_warnedAboutRefsInRender' of null\r\n```\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12411",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12411/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12411/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12411/events",
    "html_url": "https://github.com/facebook/react/issues/12411",
    "id": 307021751,
    "number": 12411,
    "title": "UNSAFE_* Lifecycle hooks don't run if getDerivedStateFromProps is present",
    "user": {
      "login": "jquense",
      "id": 339286,
      "avatar_url": "https://avatars2.githubusercontent.com/u/339286?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jquense",
      "html_url": "https://github.com/jquense",
      "followers_url": "https://api.github.com/users/jquense/followers",
      "following_url": "https://api.github.com/users/jquense/following{/other_user}",
      "gists_url": "https://api.github.com/users/jquense/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jquense/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jquense/subscriptions",
      "organizations_url": "https://api.github.com/users/jquense/orgs",
      "repos_url": "https://api.github.com/users/jquense/repos",
      "events_url": "https://api.github.com/users/jquense/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jquense/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "bvaughn",
      "id": 29597,
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "bvaughn",
        "id": 29597,
        "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bvaughn",
        "html_url": "https://github.com/bvaughn",
        "followers_url": "https://api.github.com/users/bvaughn/followers",
        "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
        "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
        "organizations_url": "https://api.github.com/users/bvaughn/orgs",
        "repos_url": "https://api.github.com/users/bvaughn/repos",
        "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/bvaughn/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 19,
    "created_at": "2018-03-20T20:14:42Z",
    "updated_at": "2018-03-21T18:50:43Z",
    "closed_at": null,
    "author_association": "COLLABORATOR",
    "body": "https://codesandbox.io/s/xl7k7j1k6w\r\n\r\nNot sure if this is intended or not, the longer term existence of these hooks suggested to me that they have their purposes still, so might be needed in conjunction with gDSFP. The particular use-case that caused me to discover this was a migrating: https://github.com/react-bootstrap/react-bootstrap/blob/master/src/Dropdown.js#L137 where document focus needs to be checked _prior_ to an update flushing because the update changes visual state and drops focus. I could move this to `render()` but React has traditionally yelled at me when doing ref stuff there. Admittedly in the migrated code i don't need `findDOMNode` so it'd be fine."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12404",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12404/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12404/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12404/events",
    "html_url": "https://github.com/facebook/react/pull/12404",
    "id": 306639363,
    "number": 12404,
    "title": "New commit phase lifecycle: getSnapshotBeforeUpdate",
    "user": {
      "login": "bvaughn",
      "id": 29597,
      "avatar_url": "https://avatars0.githubusercontent.com/u/29597?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bvaughn",
      "html_url": "https://github.com/bvaughn",
      "followers_url": "https://api.github.com/users/bvaughn/followers",
      "following_url": "https://api.github.com/users/bvaughn/following{/other_user}",
      "gists_url": "https://api.github.com/users/bvaughn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bvaughn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bvaughn/subscriptions",
      "organizations_url": "https://api.github.com/users/bvaughn/orgs",
      "repos_url": "https://api.github.com/users/bvaughn/repos",
      "events_url": "https://api.github.com/users/bvaughn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bvaughn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-19T21:17:46Z",
    "updated_at": "2018-03-21T22:45:45Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12404",
      "html_url": "https://github.com/facebook/react/pull/12404",
      "diff_url": "https://github.com/facebook/react/pull/12404.diff",
      "patch_url": "https://github.com/facebook/react/pull/12404.patch"
    },
    "body": "Implements reactjs/rfcs/pull/33\r\n\r\n# Questions\r\n- [x] Reuse the `Update` effect tag or make a new one? I think it's best to make a new one (`Snapshot`).\r\n- [x] Can I share/use the traversal in `commitAllHostEffects` rather than making a new one?\r\n- [x] Should I store the temporary snapshot in the `updateQueue`? For now I'll store it on the instance (`__reactInternalSnapshotBeforeUpdate`)\r\n\r\n# TODO\r\n- [x] Add tests for basic error handling.\r\n- [x] Add DEV-warning (with test) for getSnapshotBeforeUpdate() without a componentDidUpdate()\r\n- [x] Add DEV-warning (with test) for undefined return value from getSnapshotBeforeUpdate()"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12399",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12399/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12399/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12399/events",
    "html_url": "https://github.com/facebook/react/pull/12399",
    "id": 306324073,
    "number": 12399,
    "title": "Fix small typos in create-subscription readme",
    "user": {
      "login": "alexzherdev",
      "id": 93752,
      "avatar_url": "https://avatars3.githubusercontent.com/u/93752?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexzherdev",
      "html_url": "https://github.com/alexzherdev",
      "followers_url": "https://api.github.com/users/alexzherdev/followers",
      "following_url": "https://api.github.com/users/alexzherdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexzherdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexzherdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexzherdev/subscriptions",
      "organizations_url": "https://api.github.com/users/alexzherdev/orgs",
      "repos_url": "https://api.github.com/users/alexzherdev/repos",
      "events_url": "https://api.github.com/users/alexzherdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexzherdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-19T03:42:26Z",
    "updated_at": "2018-03-19T03:50:33Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12399",
      "html_url": "https://github.com/facebook/react/pull/12399",
      "diff_url": "https://github.com/facebook/react/pull/12399.diff",
      "patch_url": "https://github.com/facebook/react/pull/12399.patch"
    },
    "body": "Noticed a couple of typos."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12397",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12397/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12397/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12397/events",
    "html_url": "https://github.com/facebook/react/issues/12397",
    "id": 306234572,
    "number": 12397,
    "title": "Is there a way to access new context api within ComponentDidMount?",
    "user": {
      "login": "grillorafael",
      "id": 1812267,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1812267?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grillorafael",
      "html_url": "https://github.com/grillorafael",
      "followers_url": "https://api.github.com/users/grillorafael/followers",
      "following_url": "https://api.github.com/users/grillorafael/following{/other_user}",
      "gists_url": "https://api.github.com/users/grillorafael/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grillorafael/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grillorafael/subscriptions",
      "organizations_url": "https://api.github.com/users/grillorafael/orgs",
      "repos_url": "https://api.github.com/users/grillorafael/repos",
      "events_url": "https://api.github.com/users/grillorafael/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grillorafael/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 40929155,
        "url": "https://api.github.com/repos/facebook/react/labels/Type:%20Question",
        "name": "Type: Question",
        "color": "cc317c",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2018-03-18T12:06:40Z",
    "updated_at": "2018-03-18T18:16:37Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "We are building a react mapbox gl module and we use clone and inject props today.\r\n\r\nWe were looking into using the 16.2.0 context api but I saw that it will have a new one on 16.3.0 but I can’t seem to find a way to read context details\r\nOn componentDidMount lifecycle (which makes sense for me to use on the map implementation).\r\n\r\nIs there a way around this ?"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12393",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12393/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12393/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12393/events",
    "html_url": "https://github.com/facebook/react/issues/12393",
    "id": 306067450,
    "number": 12393,
    "title": "Keep the children mounted but replace the parent",
    "user": {
      "login": "Orelc",
      "id": 32314413,
      "avatar_url": "https://avatars1.githubusercontent.com/u/32314413?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Orelc",
      "html_url": "https://github.com/Orelc",
      "followers_url": "https://api.github.com/users/Orelc/followers",
      "following_url": "https://api.github.com/users/Orelc/following{/other_user}",
      "gists_url": "https://api.github.com/users/Orelc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Orelc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Orelc/subscriptions",
      "organizations_url": "https://api.github.com/users/Orelc/orgs",
      "repos_url": "https://api.github.com/users/Orelc/repos",
      "events_url": "https://api.github.com/users/Orelc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Orelc/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-16T20:31:44Z",
    "updated_at": "2018-03-21T00:05:28Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nI'm trying to do something like this:\r\n\r\n```\r\nconst Container = (props) => props.someCondition? (\r\n    <ContainerType1>\r\n        {props.children}\r\n    </ContainerType1>\r\n) : (\r\n    <ContainerType2>\r\n        {props.children}\r\n    </ContainerType2>\r\n);\r\n\r\nconst App = (props) => (\r\n    <Container someCondition={props.someCondition} >\r\n        <ComponentThatDoesAsyncFetches1 />\r\n        <ComponentThatDoesAsyncFetches2 />\r\n        <ComponentThatDoesAsyncFetches3 />\r\n    </Container>\r\n);\r\n```\r\n\r\nBasically what I want is a situation where App is rerendering on a changing boolean prop (Imagine someCondition has an actual changing value), and a different container will render depending on its value, while maintaining the same children inside. Problem is, that those children are doing async fetches (on DidMount), but they re-mount and lose their state while the containers change. \r\n\r\nAny idea how can I achieve this with the children still mounted even if their parent changed?\r\n\r\nThanks in advance!\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12391",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12391/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12391/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12391/events",
    "html_url": "https://github.com/facebook/react/pull/12391",
    "id": 305924725,
    "number": 12391,
    "title": "Remove reconcileChildren and use reconcileChildrenAtExpirationTime",
    "user": {
      "login": "AlicanC",
      "id": 412180,
      "avatar_url": "https://avatars2.githubusercontent.com/u/412180?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AlicanC",
      "html_url": "https://github.com/AlicanC",
      "followers_url": "https://api.github.com/users/AlicanC/followers",
      "following_url": "https://api.github.com/users/AlicanC/following{/other_user}",
      "gists_url": "https://api.github.com/users/AlicanC/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AlicanC/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AlicanC/subscriptions",
      "organizations_url": "https://api.github.com/users/AlicanC/orgs",
      "repos_url": "https://api.github.com/users/AlicanC/repos",
      "events_url": "https://api.github.com/users/AlicanC/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AlicanC/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-16T13:19:19Z",
    "updated_at": "2018-03-16T13:19:36Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12391",
      "html_url": "https://github.com/facebook/react/pull/12391",
      "diff_url": "https://github.com/facebook/react/pull/12391.diff",
      "patch_url": "https://github.com/facebook/react/pull/12391.patch"
    },
    "body": "@acdlite is this what you've meant? (Seemed too easy so I'm suspecting you could've meant something else.)\r\n\r\n`reconcileChildrenAtExpirationTime()` is currently never called without an `renderExpirationTime ` so maybe it could be refactored to this:\r\n```javascript\r\n  function reconcileChildrenAtExpirationTime(\r\n    current,\r\n    workInProgress,\r\n    nextChildren,\r\n    renderExpirationTime,\r\n  ) {\r\n    if (renderExpirationTime === undefined) {\r\n      renderExpirationTime = workInProgress.expirationTime;\r\n    }\r\n\r\n    // ...\r\n  }\r\n```\r\n\r\nSo calls like this:\r\n```javascript\r\n      reconcileChildrenAtExpirationTime(\r\n        current,\r\n        workInProgress,\r\n        nextChildren,\r\n        workInProgress.expirationTime,\r\n      );\r\n```\r\nCan be simplified to:\r\n```javascript\r\n      reconcileChildrenAtExpirationTime(\r\n        current,\r\n        workInProgress,\r\n        nextChildren,\r\n      );\r\n```"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12384",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12384/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12384/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12384/events",
    "html_url": "https://github.com/facebook/react/pull/12384",
    "id": 305721353,
    "number": 12384,
    "title": "Update user timing to record when we are about to commit",
    "user": {
      "login": "flarnie",
      "id": 1114467,
      "avatar_url": "https://avatars2.githubusercontent.com/u/1114467?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flarnie",
      "html_url": "https://github.com/flarnie",
      "followers_url": "https://api.github.com/users/flarnie/followers",
      "following_url": "https://api.github.com/users/flarnie/following{/other_user}",
      "gists_url": "https://api.github.com/users/flarnie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flarnie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flarnie/subscriptions",
      "organizations_url": "https://api.github.com/users/flarnie/orgs",
      "repos_url": "https://api.github.com/users/flarnie/repos",
      "events_url": "https://api.github.com/users/flarnie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flarnie/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-15T21:12:25Z",
    "updated_at": "2018-03-17T00:17:37Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12384",
      "html_url": "https://github.com/facebook/react/pull/12384",
      "diff_url": "https://github.com/facebook/react/pull/12384.diff",
      "patch_url": "https://github.com/facebook/react/pull/12384.patch"
    },
    "body": "**what is the change?:**\r\nAfter repeatedly logging '(React Tree Reconciliation)' we vary the\r\nmessage slightly for the last reconciliation, which happens right before\r\nwe commit.\r\n\r\n**why make this change?:**\r\nWhen debugging performance of async. rendering in the devtools it will be helpful if we can\r\nquickly see where the 'commit' happens in a potentially long list of\r\nsliced '(React Tree Reconciliation)' logs.\r\n\r\n**test plan:**\r\nBuilt and ran one of the fixtures. Also ran the unit test.\r\n\r\n![screen shot 2018-03-15 at 1 54 30 pm](https://user-images.githubusercontent.com/1114467/37491374-d739ce68-285a-11e8-9dd9-5b3cc95aad5e.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12370",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12370/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12370/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12370/events",
    "html_url": "https://github.com/facebook/react/pull/12370",
    "id": 304961022,
    "number": 12370,
    "title": "Dynamically initialize RESERVED_PROPS",
    "user": {
      "login": "Deraen",
      "id": 648087,
      "avatar_url": "https://avatars0.githubusercontent.com/u/648087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Deraen",
      "html_url": "https://github.com/Deraen",
      "followers_url": "https://api.github.com/users/Deraen/followers",
      "following_url": "https://api.github.com/users/Deraen/following{/other_user}",
      "gists_url": "https://api.github.com/users/Deraen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Deraen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Deraen/subscriptions",
      "organizations_url": "https://api.github.com/users/Deraen/orgs",
      "repos_url": "https://api.github.com/users/Deraen/repos",
      "events_url": "https://api.github.com/users/Deraen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Deraen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-13T22:39:21Z",
    "updated_at": "2018-03-14T16:50:29Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12370",
      "html_url": "https://github.com/facebook/react/pull/12370",
      "diff_url": "https://github.com/facebook/react/pull/12370.diff",
      "patch_url": "https://github.com/facebook/react/pull/12370.patch"
    },
    "body": "Fixes #12368 \r\n\r\nGoogle Closure Compiler will optimize away the properties from objects if the property is not directly used. In these cases properties are only used dynamically.\r\n\r\nI have tested this with Google Closure Compiler and I can confirm this fixes e.g. `renderToString` in Closure optimized app.\r\n\r\nIf there is some reason to not use `Set` in `ReactElement`, that is not strictly required. Fixing `ReactPartialRenderer` is enough for my use case."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12368",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12368/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12368/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12368/events",
    "html_url": "https://github.com/facebook/react/issues/12368",
    "id": 304935977,
    "number": 12368,
    "title": "RESERVED_PROPS is optimized away by Google Closure Compiler",
    "user": {
      "login": "Deraen",
      "id": 648087,
      "avatar_url": "https://avatars0.githubusercontent.com/u/648087?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Deraen",
      "html_url": "https://github.com/Deraen",
      "followers_url": "https://api.github.com/users/Deraen/followers",
      "following_url": "https://api.github.com/users/Deraen/following{/other_user}",
      "gists_url": "https://api.github.com/users/Deraen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Deraen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Deraen/subscriptions",
      "organizations_url": "https://api.github.com/users/Deraen/orgs",
      "repos_url": "https://api.github.com/users/Deraen/repos",
      "events_url": "https://api.github.com/users/Deraen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Deraen/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-13T21:07:27Z",
    "updated_at": "2018-03-13T21:07:27Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I'm testing running React through Closure optimizations (with ClojureScript), and I've hit problem where e.g. `children` property gets included in output when using `renderToString/staticMarkup`:\r\n\r\n```\r\n<p children=\"foo, ,bar,,1\">foo bar1</p>\r\n```\r\n\r\n(the way children value is converted to string could be due to Cljs).\r\n\r\nThis is due to Google Closure removes all the properties from the `RESERVED_PROPS` objects, as they aren't statically accessed.\r\n\r\n@banga already has fix for ReactElement  in #11967 /  #11995:\r\n\r\nhttps://github.com/facebook/react/pull/11967/commits/7d50185b83e679aacff248dcf071eeefb8ce0219\r\n\r\nBut React-dom server has another place with the same problem:\r\n\r\nhttps://github.com/facebook/react/blob/ad9544f48e58f2599a8ea0de1e9f4dd104db30bb/packages/react-dom/src/server/ReactPartialRenderer.js#L312-L317\r\n\r\nUnfortunately looks like this isn't fixable by externs or other means by user, so it would be nice to have this fixed here.\r\n\r\n(Mostly React already works with Closure optimizations in Cljs, but my test-suite uses `renderToStaticMarkup`.)"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12367",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12367/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12367/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12367/events",
    "html_url": "https://github.com/facebook/react/issues/12367",
    "id": 304922714,
    "number": 12367,
    "title": "Increase code coverage",
    "user": {
      "login": "alopezsanchez",
      "id": 15221596,
      "avatar_url": "https://avatars3.githubusercontent.com/u/15221596?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alopezsanchez",
      "html_url": "https://github.com/alopezsanchez",
      "followers_url": "https://api.github.com/users/alopezsanchez/followers",
      "following_url": "https://api.github.com/users/alopezsanchez/following{/other_user}",
      "gists_url": "https://api.github.com/users/alopezsanchez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alopezsanchez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alopezsanchez/subscriptions",
      "organizations_url": "https://api.github.com/users/alopezsanchez/orgs",
      "repos_url": "https://api.github.com/users/alopezsanchez/repos",
      "events_url": "https://api.github.com/users/alopezsanchez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alopezsanchez/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-13T20:26:26Z",
    "updated_at": "2018-03-13T20:26:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "Hello!\r\n\r\nI want to start contributing to React and I don't know how to start... I took a look to the `Good First Issue`, but I think I can help increasing the code coverage. What do you think?\r\n\r\nI'm taking a look to the coverage report, but I don't know which is the best place to start. Can you give me a recommendation?\r\n\r\nThanks!\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12363",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12363/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12363/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12363/events",
    "html_url": "https://github.com/facebook/react/issues/12363",
    "id": 304866202,
    "number": 12363,
    "title": "React onBlur events not firing during unmount",
    "user": {
      "login": "timjim-kr",
      "id": 13425297,
      "avatar_url": "https://avatars3.githubusercontent.com/u/13425297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timjim-kr",
      "html_url": "https://github.com/timjim-kr",
      "followers_url": "https://api.github.com/users/timjim-kr/followers",
      "following_url": "https://api.github.com/users/timjim-kr/following{/other_user}",
      "gists_url": "https://api.github.com/users/timjim-kr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timjim-kr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timjim-kr/subscriptions",
      "organizations_url": "https://api.github.com/users/timjim-kr/orgs",
      "repos_url": "https://api.github.com/users/timjim-kr/repos",
      "events_url": "https://api.github.com/users/timjim-kr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timjim-kr/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-13T17:38:08Z",
    "updated_at": "2018-03-13T17:38:08Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nbug\r\n\r\n**What is the current behavior?**\r\n\r\nIf a DOM element rendered by a React component has focus, and the React component unmounts, the React `onBlur` event does not fire on parent DOM elements.\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nhttps://codesandbox.io/s/134wrzy6q7\r\n\r\n**What is the expected behavior?**\r\n\r\nI would expect that, just like the browser fires a `focusout` event when removing a DOM node, React would fire an `onBlur` events up to parent nodes when the focused node is removed / unmounted.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact: 16.2\r\nMac OS X: 10.13.2\r\nBrowser: Chrome 67.0.3366.0, Chrome 64.0.3282.186\r\n\r\nNo idea if this worked in earlier versions of React."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12362",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12362/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12362/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12362/events",
    "html_url": "https://github.com/facebook/react/issues/12362",
    "id": 304863935,
    "number": 12362,
    "title": "ReactDOM minified development build error misleadingly says there's a development build of React, rather than ReactDOM",
    "user": {
      "login": "dtaub",
      "id": 2524663,
      "avatar_url": "https://avatars1.githubusercontent.com/u/2524663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dtaub",
      "html_url": "https://github.com/dtaub",
      "followers_url": "https://api.github.com/users/dtaub/followers",
      "following_url": "https://api.github.com/users/dtaub/following{/other_user}",
      "gists_url": "https://api.github.com/users/dtaub/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dtaub/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dtaub/subscriptions",
      "organizations_url": "https://api.github.com/users/dtaub/orgs",
      "repos_url": "https://api.github.com/users/dtaub/repos",
      "events_url": "https://api.github.com/users/dtaub/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dtaub/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-13T17:31:57Z",
    "updated_at": "2018-03-13T17:31:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "<!--\r\n  Note: if the issue is about documentation or the website, please file it at:\r\n  https://github.com/reactjs/reactjs.org/issues/new\r\n-->\r\n\r\n**Do you want to request a *feature* or report a *bug*?**\r\nBug-ish (error clarification)\r\n\r\n**What is the current behavior?**\r\nWhen including a minified development build of ReactDOM the error reads: `It looks like you're using a minified copy of the development build of React.`\r\n\r\n**What is the expected behavior?**\r\nThe error correctly notified me that I was using a minfied development copy, but it took me a while to realize it meant ReactDOM and not core React.\r\nI feel it should more accurately read: `It looks like you're using a minified copy of the development build of ReactDOM.`\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12361",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12361/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12361/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12361/events",
    "html_url": "https://github.com/facebook/react/issues/12361",
    "id": 304730433,
    "number": 12361,
    "title": "question about setTimeout effect of two  react demo",
    "user": {
      "login": "yangdonglai",
      "id": 17786362,
      "avatar_url": "https://avatars2.githubusercontent.com/u/17786362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yangdonglai",
      "html_url": "https://github.com/yangdonglai",
      "followers_url": "https://api.github.com/users/yangdonglai/followers",
      "following_url": "https://api.github.com/users/yangdonglai/following{/other_user}",
      "gists_url": "https://api.github.com/users/yangdonglai/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yangdonglai/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yangdonglai/subscriptions",
      "organizations_url": "https://api.github.com/users/yangdonglai/orgs",
      "repos_url": "https://api.github.com/users/yangdonglai/repos",
      "events_url": "https://api.github.com/users/yangdonglai/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yangdonglai/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-13T11:42:46Z",
    "updated_at": "2018-03-14T15:52:22Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "I am a react learner. I'm counfuse by two react demo\r\n[demo1](https://8nv081l708.codesandbox.io/)\r\n[demo2](https://xj4j54lk9z.codesandbox.io/)\r\n\r\n>[demo1](https://8nv081l708.codesandbox.io/)\r\n\r\n```js\r\nimport React from \"react\";\r\n\r\nlet num = 0;\r\nexport default class Hello extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    data: 0\r\n  };\r\n  componentDidMount() {\r\n    // setTimeout(() => {\r\n    // const button = document.getElementById('button');\r\n    const button = this.button;\r\n    console.log(\"button first click\");\r\n    button.click();\r\n    console.log(\"button second click\");\r\n    button.click();\r\n    // }, 3000);\r\n  }\r\n  delay = () => {\r\n    const count = num++;\r\n    console.log(\"out\", count);\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const data = Math.random() * 10;\r\n      console.log(\"in\", count);\r\n      this.setState({\r\n        data: data,\r\n        loading: false\r\n      });\r\n    }, 1000);\r\n  };\r\n  render() {\r\n    const { loading, data } = this.state;\r\n    if (loading) {\r\n      return <p>this is loading</p>;\r\n    }\r\n    return (\r\n      <div>\r\n        <p>{`data: ${data}`}</p>\r\n        <p>\r\n          <button\r\n            id=\"button\"\r\n            ref={ref => (this.button = ref)}\r\n            onClick={this.delay}\r\n          >\r\n            update\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\n> [demo2](https://xj4j54lk9z.codesandbox.io/)\r\n```js\r\nimport React from \"react\";\r\n\r\nlet num = 0;\r\nexport default class Hello extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    data: 0\r\n  };\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      // const button = document.getElementById('button');\r\n      const button = this.button;\r\n      console.log(\"button first click\");\r\n      button.click();\r\n      console.log(\"button second click\");\r\n      button.click();\r\n    }, 3000);\r\n  }\r\n  delay = () => {\r\n    const count = num++;\r\n    console.log(\"out\", count);\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const data = Math.random() * 10;\r\n      console.log(\"in\", count);\r\n      this.setState({\r\n        data: data,\r\n        loading: false\r\n      });\r\n    }, 1000);\r\n  };\r\n  render() {\r\n    const { loading, data } = this.state;\r\n    if (loading) {\r\n      return <p>this is loading</p>;\r\n    }\r\n    return (\r\n      <div>\r\n        <p>{`data: ${data}`}</p>\r\n        <p>\r\n          <button\r\n            id=\"button\"\r\n            ref={ref => (this.button = ref)}\r\n            onClick={this.delay}\r\n          >\r\n            update\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n```\r\n\r\nthe only different code is in **componentDidMount()**\r\nthe console message is aslo different about two demo\r\n> [demo1](https://8nv081l708.codesandbox.io/) result\r\n![image](https://user-images.githubusercontent.com/17786362/37339919-3e4bf352-26f7-11e8-8c38-06064ba3b466.png)\r\n\r\n> [demo2](https://xj4j54lk9z.codesandbox.io/) result\r\n![image](https://user-images.githubusercontent.com/17786362/37339948-55f0bd6c-26f7-11e8-93b6-6a6e79df986d.png)\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12360",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12360/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12360/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12360/events",
    "html_url": "https://github.com/facebook/react/issues/12360",
    "id": 304624078,
    "number": 12360,
    "title": "addEventListener not working properly in componentDidUpdate",
    "user": {
      "login": "benwiley4000",
      "id": 13558253,
      "avatar_url": "https://avatars2.githubusercontent.com/u/13558253?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benwiley4000",
      "html_url": "https://github.com/benwiley4000",
      "followers_url": "https://api.github.com/users/benwiley4000/followers",
      "following_url": "https://api.github.com/users/benwiley4000/following{/other_user}",
      "gists_url": "https://api.github.com/users/benwiley4000/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benwiley4000/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benwiley4000/subscriptions",
      "organizations_url": "https://api.github.com/users/benwiley4000/orgs",
      "repos_url": "https://api.github.com/users/benwiley4000/repos",
      "events_url": "https://api.github.com/users/benwiley4000/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benwiley4000/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-13T04:27:21Z",
    "updated_at": "2018-03-18T14:14:31Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\nBug!\r\n\r\n**What is the current behavior?**\r\nWhen I update event listeners by removing old listeners and adding new ones on an element obtained by React ref in `componentDidUpdate` (React 16.3 alpha), my handlers don't register properly. If I take out the part where I remove listeners, or put the whole thing inside a `setTimeout`, it works fine. **This worked fine when I was doing it in componentWillReceiveProps but I moved this part to componentDidUpdate for React 16.3.**\r\n\r\nMy code is kind of like:\r\n```jsx\r\n// does NOT work\r\ncomponentDidUpdate(prevProps) {\r\n  for (const eventType in prevProps.eventHandlers) {\r\n    this.audio.removeEventListener(eventType, prevProps.eventHandlers[eventType]);\r\n  }\r\n  for (const eventType in this.props.eventHandlers) {\r\n    this.audio.addEventListener(eventType, this.props.eventHandlers[eventType]);\r\n  }\r\n  // ...\r\n}\r\n\r\n// DOES work!\r\ncomponentDidUpdate(prevProps) {\r\n  // for (const eventType in prevProps.eventHandlers) {\r\n  //   this.audio.removeEventListener(eventType, prevProps.eventHandlers[eventType]);\r\n  // }\r\n  for (const eventType in this.props.eventHandlers) {\r\n    this.audio.addEventListener(eventType, this.props.eventHandlers[eventType]);\r\n  }\r\n  // ...\r\n}\r\n\r\n// DOES work!\r\ncomponentDidUpdate(prevProps) {\r\n  setTimeout(() => {\r\n    for (const eventType in prevProps.eventHandlers) {\r\n      this.audio.removeEventListener(eventType, prevProps.eventHandlers[eventType]);\r\n    }\r\n    for (const eventType in this.props.eventHandlers) {\r\n      this.audio.addEventListener(eventType, this.props.eventHandlers[eventType]);\r\n    }\r\n  });\r\n  // ...\r\n}\r\n\r\nrender() {\r\n  return <audio ref={a => this.audio = a} />;\r\n}\r\n```\r\n\r\n**If the current behavior is a bug, please provide the steps to reproduce and if possible a minimal demo of the problem. Your bug will get fixed much faster if we can run your code and it doesn't have dependencies other than React. Paste the link to your JSFiddle (https://jsfiddle.net/Luktwrdm/) or CodeSandbox (https://codesandbox.io/s/new) example below:**\r\n\r\nUnfortunately I can't reproduce in a simple example but you can check out and build the [`next`](https://github.com/benwiley4000/react-responsive-audio-player/tree/7235ba9908bbd493e431d123406fcee063a1eefc) branch of react-responsive-audio-player and run `npm run dev` to see the behavior (example.html adds a listener which should run when volume toggles from muted to unmuted). [`componentDidUpdate`](https://github.com/benwiley4000/react-responsive-audio-player/blob/next/src/AudioPlayer.js#L245) \r\n\r\n**What is the expected behavior?**\r\n\r\nListener adding should work fine\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\nI tested React 16.3-alpha.1. I think the issue also exists in React 15 - I was able to reproduce the problem locally with React 15 but I had to make some manual tweaks to create-react-context to make it backward compatible (I've now [published a polyfill](https://github.com/benwiley4000/react-dot-fragment) to make this sort of thing easier)."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12355",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12355/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12355/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12355/events",
    "html_url": "https://github.com/facebook/react/issues/12355",
    "id": 304428409,
    "number": 12355,
    "title": "Possible bug in ReactDOM.createPortal when used in a new window",
    "user": {
      "login": "Drarok",
      "id": 55830,
      "avatar_url": "https://avatars0.githubusercontent.com/u/55830?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Drarok",
      "html_url": "https://github.com/Drarok",
      "followers_url": "https://api.github.com/users/Drarok/followers",
      "following_url": "https://api.github.com/users/Drarok/following{/other_user}",
      "gists_url": "https://api.github.com/users/Drarok/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Drarok/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Drarok/subscriptions",
      "organizations_url": "https://api.github.com/users/Drarok/orgs",
      "repos_url": "https://api.github.com/users/Drarok/repos",
      "events_url": "https://api.github.com/users/Drarok/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Drarok/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-12T15:48:05Z",
    "updated_at": "2018-03-13T16:17:26Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\n\r\nA bug.\r\n\r\n**What is the current behavior?**\r\n\r\nWhen a `ReactDOM.createPortal` is used in conjunction with a container in another window, the components do not respond to user input until after `setState` or `forceUpdate` are called on the _parent_ component of the portal.\r\n\r\nI've produced a [CodePen demonstrating the issue](https://codepen.io/anon/pen/yKYYzB).\r\n\r\n1. Click \"Open a Portal\" – a new window appears with a pair of buttons.\r\n2. Click either button in the new window – nothing happens.\r\n3. Click the \"Hack\" button in the parent window (which simply calls `setState({})` on the parent).\r\n4. Note that the buttons in the new window now work as expected.\r\n\r\n**What is the expected behavior?**\r\n\r\nI expect the components in the new window to be interactive.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\nReact 16.2.0\r\nReactDOM 16.2.0\r\n\r\nI've tested this in Safari and Chrome on Mac."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12352",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12352/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12352/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12352/events",
    "html_url": "https://github.com/facebook/react/pull/12352",
    "id": 304076452,
    "number": 12352,
    "title": "[WIP] Rollup plugin node resolve 3",
    "user": {
      "login": "pravi",
      "id": 708222,
      "avatar_url": "https://avatars1.githubusercontent.com/u/708222?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pravi",
      "html_url": "https://github.com/pravi",
      "followers_url": "https://api.github.com/users/pravi/followers",
      "following_url": "https://api.github.com/users/pravi/following{/other_user}",
      "gists_url": "https://api.github.com/users/pravi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pravi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pravi/subscriptions",
      "organizations_url": "https://api.github.com/users/pravi/orgs",
      "repos_url": "https://api.github.com/users/pravi/repos",
      "events_url": "https://api.github.com/users/pravi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pravi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2018-03-10T14:56:01Z",
    "updated_at": "2018-03-11T07:36:57Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12352",
      "html_url": "https://github.com/facebook/react/pull/12352",
      "diff_url": "https://github.com/facebook/react/pull/12352.diff",
      "patch_url": "https://github.com/facebook/react/pull/12352.patch"
    },
    "body": "First attempt to update rollup-plugin-node-resolve to 3.0. NODE_PATH=packages yarn run build is required for build to pass. Else \r\n\r\n```\r\n$ yarn run build\r\nyarn run v0.27.5\r\n$ npm run version-check && node ./scripts/rollup/build.js\r\n\r\n> @16.3.0-alpha.1 version-check /home/pravi/forge/debian/git/pkg-javascript/react\r\n> node ./scripts/tasks/version-check.js\r\n\r\n BUILDING  react.development.js (umd_dev)\r\n COMPLETE  react.development.js (umd_dev)\r\n\r\n BUILDING  react.production.min.js (umd_prod)\r\n COMPLETE  react.production.min.js (umd_prod)\r\n\r\n BUILDING  react.development.js (node_dev)\r\n COMPLETE  react.development.js (node_dev)\r\n\r\n BUILDING  react.production.min.js (node_prod)\r\n COMPLETE  react.production.min.js (node_prod)\r\n\r\n/home/pravi/forge/debian/git/pkg-javascript/react/scripts/rollup/build.js:34\r\n  throw err;\r\n  ^\r\n\r\nError: Cannot find module 'react/src/ReactCurrentOwner'\r\n    at Function.Module._resolveFilename (module.js:536:15)\r\n    at Function.resolve (internal/module.js:18:19)\r\n    at Object.keys.forEach.srcModule (/home/pravi/forge/debian/git/pkg-javascript/react/scripts/rollup/plugins/use-forks-plugin.js:35:15)\r\n    at Array.forEach (<anonymous>)\r\n    at useForks (/home/pravi/forge/debian/git/pkg-javascript/react/scripts/rollup/plugins/use-forks-plugin.js:32:22)\r\n    at getPlugins (/home/pravi/forge/debian/git/pkg-javascript/react/scripts/rollup/build.js:207:5)\r\n    at createBundle (/home/pravi/forge/debian/git/pkg-javascript/react/scripts/rollup/build.js:359:14)\r\n    at buildEverything (/home/pravi/forge/debian/git/pkg-javascript/react/scripts/rollup/build.js:471:11)\r\n    at <anonymous>\r\nerror Command failed with exit code 1.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\r\n\r\n```\r\n\r\nReview/help is appreciated."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12350",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12350/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12350/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12350/events",
    "html_url": "https://github.com/facebook/react/pull/12350",
    "id": 303969443,
    "number": 12350,
    "title": "Add Netlify integration for DOM Fixtures folder",
    "user": {
      "login": "klamping",
      "id": 706039,
      "avatar_url": "https://avatars2.githubusercontent.com/u/706039?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klamping",
      "html_url": "https://github.com/klamping",
      "followers_url": "https://api.github.com/users/klamping/followers",
      "following_url": "https://api.github.com/users/klamping/following{/other_user}",
      "gists_url": "https://api.github.com/users/klamping/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klamping/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klamping/subscriptions",
      "organizations_url": "https://api.github.com/users/klamping/orgs",
      "repos_url": "https://api.github.com/users/klamping/repos",
      "events_url": "https://api.github.com/users/klamping/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klamping/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      },
      {
        "id": 127893911,
        "url": "https://api.github.com/repos/facebook/react/labels/Component:%20DOM",
        "name": "Component: DOM",
        "color": "fef2c0",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2018-03-09T20:25:17Z",
    "updated_at": "2018-03-12T13:55:40Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12350",
      "html_url": "https://github.com/facebook/react/pull/12350",
      "diff_url": "https://github.com/facebook/react/pull/12350.diff",
      "patch_url": "https://github.com/facebook/react/pull/12350.patch"
    },
    "body": "In issue #11079, @nhunzaker mentions that it would be nice to have an automatic deployment of [the DOM Fixtures folder](https://github.com/facebook/react/tree/master/fixtures/dom) for manual and automated testing purposes.\r\n\r\nSince [Netlify offers their services for free to open source projects](https://www.netlify.com/open-source/) (an account for this will need to be set up), I thought it would be a great fit. \r\n\r\nThis commit adds a `netlify.toml` file to the repo, allowing easier deployment out to the service.\r\n\r\nThis file will do two things:\r\n1. On master branch update, it deploys the latest code to the main linked netlify site. For example: https://musing-lewin-a6efa4.netlify.com/\r\n2. For every PR opened, creates a 'Deploy Preview' site for validating that PR's changes. For example: https://deploy-preview-1--musing-lewin-a6efa4.netlify.com/\r\nThe preview site is linked via GitHub in the PR. \r\n![image](https://user-images.githubusercontent.com/706039/37229973-7bf92c78-23ab-11e8-8ca1-aa1c63ccd2b1.png)\r\n\r\n\r\n**Test Plan:**\r\nCreate a Netlify account and [connect the github repo you're testing to it](https://app.netlify.com/start).\r\nAfter connection, Netlify should deploy the DOM fixtures build folder to a live site for you to use."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12347",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12347/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12347/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12347/events",
    "html_url": "https://github.com/facebook/react/pull/12347",
    "id": 303677334,
    "number": 12347,
    "title": "Improve warning message for setState-on-unmounted",
    "user": {
      "login": "sophiebits",
      "id": 6820,
      "avatar_url": "https://avatars2.githubusercontent.com/u/6820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sophiebits",
      "html_url": "https://github.com/sophiebits",
      "followers_url": "https://api.github.com/users/sophiebits/followers",
      "following_url": "https://api.github.com/users/sophiebits/following{/other_user}",
      "gists_url": "https://api.github.com/users/sophiebits/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sophiebits/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sophiebits/subscriptions",
      "organizations_url": "https://api.github.com/users/sophiebits/orgs",
      "repos_url": "https://api.github.com/users/sophiebits/repos",
      "events_url": "https://api.github.com/users/sophiebits/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sophiebits/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-09T00:02:05Z",
    "updated_at": "2018-03-11T01:13:33Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12347",
      "html_url": "https://github.com/facebook/react/pull/12347",
      "diff_url": "https://github.com/facebook/react/pull/12347.diff",
      "patch_url": "https://github.com/facebook/react/pull/12347.patch"
    },
    "body": "This is one of the most common warnings people see, and I don't think the old text is especially clear. Improve it."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12342",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12342/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12342/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12342/events",
    "html_url": "https://github.com/facebook/react/pull/12342",
    "id": 303334088,
    "number": 12342,
    "title": "Warn if functional component accesses context object without contextTypes",
    "user": {
      "login": "acdlite",
      "id": 3624098,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/acdlite",
      "html_url": "https://github.com/acdlite",
      "followers_url": "https://api.github.com/users/acdlite/followers",
      "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
      "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
      "organizations_url": "https://api.github.com/users/acdlite/orgs",
      "repos_url": "https://api.github.com/users/acdlite/repos",
      "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
      "received_events_url": "https://api.github.com/users/acdlite/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-08T02:32:00Z",
    "updated_at": "2018-03-09T19:08:45Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12342",
      "html_url": "https://github.com/facebook/react/pull/12342",
      "diff_url": "https://github.com/facebook/react/pull/12342.diff",
      "patch_url": "https://github.com/facebook/react/pull/12342.patch"
    },
    "body": "Currently, if contextTypes is not defined, we pass an empty object. In the future, we will pass nothing. This fires a warning when the empty context object is accessed.\r\n\r\nAlternative to #12341, which jumps straight to not passing the empty object at all."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12341",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12341/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12341/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12341/events",
    "html_url": "https://github.com/facebook/react/pull/12341",
    "id": 303312348,
    "number": 12341,
    "title": "Only pass context to functional components if contextTypes is defined",
    "user": {
      "login": "acdlite",
      "id": 3624098,
      "avatar_url": "https://avatars0.githubusercontent.com/u/3624098?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/acdlite",
      "html_url": "https://github.com/acdlite",
      "followers_url": "https://api.github.com/users/acdlite/followers",
      "following_url": "https://api.github.com/users/acdlite/following{/other_user}",
      "gists_url": "https://api.github.com/users/acdlite/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/acdlite/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/acdlite/subscriptions",
      "organizations_url": "https://api.github.com/users/acdlite/orgs",
      "repos_url": "https://api.github.com/users/acdlite/repos",
      "events_url": "https://api.github.com/users/acdlite/events{/privacy}",
      "received_events_url": "https://api.github.com/users/acdlite/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-08T00:34:08Z",
    "updated_at": "2018-03-09T18:22:49Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12341",
      "html_url": "https://github.com/facebook/react/pull/12341",
      "diff_url": "https://github.com/facebook/react/pull/12341.diff",
      "patch_url": "https://github.com/facebook/react/pull/12341.patch"
    },
    "body": "I don't know if this counts as a breaking change or not. I would not expect users to depend on context being an empty object.\r\n\r\nAlternatively, we can hold off on this change until 17, and in the meantime, new-style HOCs (`useRef`, `useCache`) can workaround this by checking for the existence of `contextTypes` themselves."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12337",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12337/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12337/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12337/events",
    "html_url": "https://github.com/facebook/react/pull/12337",
    "id": 302807941,
    "number": 12337,
    "title": "Fix documentation of the release process",
    "user": {
      "login": "FlorisXll",
      "id": 9715282,
      "avatar_url": "https://avatars0.githubusercontent.com/u/9715282?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FlorisXll",
      "html_url": "https://github.com/FlorisXll",
      "followers_url": "https://api.github.com/users/FlorisXll/followers",
      "following_url": "https://api.github.com/users/FlorisXll/following{/other_user}",
      "gists_url": "https://api.github.com/users/FlorisXll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FlorisXll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FlorisXll/subscriptions",
      "organizations_url": "https://api.github.com/users/FlorisXll/orgs",
      "repos_url": "https://api.github.com/users/FlorisXll/repos",
      "events_url": "https://api.github.com/users/FlorisXll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FlorisXll/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 196858374,
        "url": "https://api.github.com/repos/facebook/react/labels/CLA%20Signed",
        "name": "CLA Signed",
        "color": "e7e7e7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-03-06T18:07:33Z",
    "updated_at": "2018-03-07T08:44:30Z",
    "closed_at": null,
    "author_association": "NONE",
    "pull_request": {
      "url": "https://api.github.com/repos/facebook/react/pulls/12337",
      "html_url": "https://github.com/facebook/react/pull/12337",
      "diff_url": "https://github.com/facebook/react/pull/12337.diff",
      "patch_url": "https://github.com/facebook/react/pull/12337.patch"
    },
    "body": "Adjusted some grammar in the [`scripts/release/README.md`](https://github.com/facebook/react/blob/master/scripts/release/README.md) file.\r\n- Adjusted title to infer that there are different kinds of release scripts\r\n- The first sentence infers that there is one release script. However, it seems that the release process includes two scripts rather than being a script on its own.\r\n- Officially, and also confirmed on the [homepage readme](https://github.com/facebook/react/blob/master/README.md#installation), the [npm](https://www.npmjs.com/) logo and name are with lowercase letters.\r\n- Some abbreviations were missing punctuation.\r\n"
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12334",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12334/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12334/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12334/events",
    "html_url": "https://github.com/facebook/react/issues/12334",
    "id": 302645565,
    "number": 12334,
    "title": "For Controlled Input, step does not work as expected unless initialized with null or \"\".",
    "user": {
      "login": "andyboyne",
      "id": 3295544,
      "avatar_url": "https://avatars1.githubusercontent.com/u/3295544?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andyboyne",
      "html_url": "https://github.com/andyboyne",
      "followers_url": "https://api.github.com/users/andyboyne/followers",
      "following_url": "https://api.github.com/users/andyboyne/following{/other_user}",
      "gists_url": "https://api.github.com/users/andyboyne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andyboyne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andyboyne/subscriptions",
      "organizations_url": "https://api.github.com/users/andyboyne/orgs",
      "repos_url": "https://api.github.com/users/andyboyne/repos",
      "events_url": "https://api.github.com/users/andyboyne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andyboyne/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-06T10:30:40Z",
    "updated_at": "2018-03-12T18:42:44Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "*BUG*\r\n\r\n**What is the current behavior?**\r\nFor input type=\"number\", step does not work as expected if there is an initial value set. Step only seems to get honored if the initial value is \"\" or null.\r\n\r\nExample:\r\nhttps://codepen.io/anon/pen/MQMBmX\r\n\r\nThe example uses a controlled input binding value and step. Step is 1/10th of the value. If you edit the value in the textbox to 50000 and increment using the stepper, it will increment to 50100 (i.e. by the initial value and not by the current step).\r\n\r\nEdit the code so initial value is \"\" or null. Edit textbox to 50000 and step up - value goes to 55000 as expected.\r\n\r\n**What is the expected behavior?**\r\nIt should be possible to render a number input that honors step without having to initialize the input component value to null or \"\" first.\r\n\r\nIt seems when there is an initial value provided, it will write a value attribute into the DOM (e.g. value=\"100\").  When initial value is \"\" or null then just the value attribute is written to DOM with no assignment. e.g. (value).\r\n\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue? Did this work in previous versions of React?**\r\n\r\n16.3.0-alpha.1  (ported to this version to confirm if still an issue)\r\n0.14.7 (originally found in this version)\r\n\r\nSeems to affect Chrome only (confirmed windows and mac, versions 59 and 64). Bug does not appear in Safari (on a mac at least)."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12331",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12331/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12331/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12331/events",
    "html_url": "https://github.com/facebook/react/issues/12331",
    "id": 302508499,
    "number": 12331,
    "title": "Production reconciler Instrumentation",
    "user": {
      "login": "nevir",
      "id": 41373,
      "avatar_url": "https://avatars1.githubusercontent.com/u/41373?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/nevir",
      "html_url": "https://github.com/nevir",
      "followers_url": "https://api.github.com/users/nevir/followers",
      "following_url": "https://api.github.com/users/nevir/following{/other_user}",
      "gists_url": "https://api.github.com/users/nevir/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/nevir/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/nevir/subscriptions",
      "organizations_url": "https://api.github.com/users/nevir/orgs",
      "repos_url": "https://api.github.com/users/nevir/repos",
      "events_url": "https://api.github.com/users/nevir/events{/privacy}",
      "received_events_url": "https://api.github.com/users/nevir/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-05T23:44:49Z",
    "updated_at": "2018-03-13T15:47:17Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "_Apologies if this is documented somewhere, but I was unable to find anything related after a pretty exhaustive search of docs + code._\r\n\r\nAre there any production instrumentation hooks for the reconciler?  Specifically, I'm looking for callbacks/events that would allow me to track overall reconciliation time spans (nothing more granular).  E.g. equivalent to the `(React Tree Reconciliation)` span.\r\n\r\nAs best I can tell, there are `performance.timings` spans reported as of Fiber (and `ReactPerf` prior), but those are only enabled in development mode."
  },
  {
    "url": "https://api.github.com/repos/facebook/react/issues/12328",
    "repository_url": "https://api.github.com/repos/facebook/react",
    "labels_url": "https://api.github.com/repos/facebook/react/issues/12328/labels{/name}",
    "comments_url": "https://api.github.com/repos/facebook/react/issues/12328/comments",
    "events_url": "https://api.github.com/repos/facebook/react/issues/12328/events",
    "html_url": "https://github.com/facebook/react/issues/12328",
    "id": 302268511,
    "number": 12328,
    "title": "Capturing events trigger after vanilla bubbling events",
    "user": {
      "login": "IPWright83",
      "id": 1374775,
      "avatar_url": "https://avatars1.githubusercontent.com/u/1374775?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IPWright83",
      "html_url": "https://github.com/IPWright83",
      "followers_url": "https://api.github.com/users/IPWright83/followers",
      "following_url": "https://api.github.com/users/IPWright83/following{/other_user}",
      "gists_url": "https://api.github.com/users/IPWright83/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IPWright83/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IPWright83/subscriptions",
      "organizations_url": "https://api.github.com/users/IPWright83/orgs",
      "repos_url": "https://api.github.com/users/IPWright83/repos",
      "events_url": "https://api.github.com/users/IPWright83/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IPWright83/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-03-05T11:42:08Z",
    "updated_at": "2018-03-05T12:41:34Z",
    "closed_at": null,
    "author_association": "NONE",
    "body": "**Do you want to request a *feature* or report a *bug*?**\r\nBug\r\n\r\n**What is the current behavior?**\r\nWhen subscribing to DOM events it's possible to use capturing. However it seems that capturing takes place after the vanilla JavaScript bubbling phase. This results in an incorrect order of events unless all events are subscribed to via React which isn't always possible.\r\n\r\nHere's an example that mimicks one of our use cases: https://jsbin.com/zuleceg/1/\r\n\r\n**What is the expected behavior?**\r\nA capturing event subscribed to within React, should take place before bubbling events subscribed to via vanilla JavaScript.\r\n\r\n**Which versions of React, and which browser / OS are affected by this issue?**\r\nDevelopment edition, Chrome v64 x64\r\n"
  }
]
